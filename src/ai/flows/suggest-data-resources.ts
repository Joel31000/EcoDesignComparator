// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for suggesting data resources based on missing information.
 *
 * - suggestDataResources - A function that suggests data resources based on missing information.
 * - SuggestDataResourcesInput - The input type for the suggestDataResources function.
 * - SuggestDataResourcesOutput - The return type for the suggestDataResources function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestDataResourcesInputSchema = z.object({
  missingInformation: z
    .string()
    .describe('The information that is missing and needed for the simulation.'),
  projectType: z
    .string()
    .describe(
      'The type of project (e.g., Travaux, services ou fourniture) for which data is needed.'
    ),
});
export type SuggestDataResourcesInput = z.infer<typeof SuggestDataResourcesInputSchema>;

const SuggestDataResourcesOutputSchema = z.object({
  suggestedResources: z
    .array(z.string())
    .describe('A list of suggested data resources (e.g., URLs, scientific papers) to find the missing information.'),
});
export type SuggestDataResourcesOutput = z.infer<typeof SuggestDataResourcesOutputSchema>;

export async function suggestDataResources(input: SuggestDataResourcesInput): Promise<SuggestDataResourcesOutput> {
  return suggestDataResourcesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestDataResourcesPrompt',
  input: {schema: SuggestDataResourcesInputSchema},
  output: {schema: SuggestDataResourcesOutputSchema},
  prompt: `You are an AI assistant specialized in suggesting data resources for construction projects.

  Based on the missing information and the project type, suggest relevant data resources such as URLs,
  scientific papers, or professional databases that the user can use to find the required data.

  Missing Information: {{{missingInformation}}}
  Project Type: {{{projectType}}}

  Format your response as a list of suggested resources.
  `,
});

const suggestDataResourcesFlow = ai.defineFlow(
  {
    name: 'suggestDataResourcesFlow',
    inputSchema: SuggestDataResourcesInputSchema,
    outputSchema: SuggestDataResourcesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

